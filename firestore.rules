rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function authed() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return authed() && request.auth.uid == uid;
    }

    // User data structure
    match /users/{uid} {
      allow read, write: if isOwner(uid);

      // Chat conversations
      match /chats/{chatId} {
        allow read, write: if isOwner(uid);

        // Messages within chats
        match /messages/{messageId} {
          allow read, write: if isOwner(uid);
        }
      }

      // Text chunks for long messages (if using Firestore for chunks)
      match /chunks/{chunkId} {
        allow read, write: if isOwner(uid);
      }

      // User personas (Persona 2.0)
      match /personas/{personaId} {
        allow read, write: if isOwner(uid);

        // Allow creation with proper structure
        allow create: if isOwner(uid)
          && request.resource.data.keys().hasAll(['name', 'initial', 'color', 'createdAt'])
          && request.resource.data.name is string
          && request.resource.data.name.size() >= 2
          && request.resource.data.name.size() <= 40;

        // Allow updates while preserving createdAt
        allow update: if isOwner(uid)
          && request.resource.data.createdAt == resource.data.createdAt;
      }

      // Fallback for any other subcollections
      match /{document=**} {
        allow read, write: if isOwner(uid);
      }
    }

    // Public personas - read-only for users (Persona 2.0)
    match /public/personas/{personaId} {
      // Anyone can read public personas
      allow read: if true;

      // Only Cloud Functions with admin SDK can write
      allow write: if false;
    }

    // Innovexia default persona (for backward compatibility)
    match /personas/innovexia {
      allow read: if true;
      allow write: if false;
    }
  }
}
